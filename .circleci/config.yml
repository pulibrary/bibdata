version: 2.1
orbs:
  node: circleci/node@5.0.3
jobs:
  build:
    working_directory: ~/bibdata

    # Primary command image where all commands run
    docker:
      - image: cimg/ruby:3.4.1-browsers
        environment:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: bibdata
      - image: cimg/postgres:13.6
        environment:
          POSTGRES_USER: bibdata
          POSTGRES_DB: bibdata_test
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: pulibrary/ci-solr:8.4-v2.0.0
        command: server/scripts/ci-start.sh

    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: '18.19.1'
      - restore_cache:
          keys:
            # this cache is never found because ruby-oci8 isn't included in ci
            - v4-bibdata-{{ checksum "Gemfile.lock" }}
            # use a partial cache restore
            - v4-bibdata-
      - run: sudo apt-get -y update
      - run: sudo apt-get install -y postgresql-client || true
      - run: gem install bundler -v '~> 2.0'
      - run: bundle config set --local without production
      - run:
          name: Install dependencies
          command: bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: v4-bibdata-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: create a temp directory
          command: mkdir tmp

      - run:
          name: Load config into solr
          command: |
            cd solr/conf
            zip -1 -r solr_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://solr:SolrRocks@127.0.0.1:8983/solr/admin/configs?action=UPLOAD&name=bibdata"
            curl -H 'Content-type: application/json' http://solr:SolrRocks@127.0.0.1:8983/api/collections/ -d '{create: {name: bibdata-core-test, config: bibdata, numShards: 1}}'

      - run:
          name: Wait for Postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 120s

      - run:
          name: Database setup
          command: bundle exec rake db:setup

  lint:
    working_directory: ~/bibdata

    docker:
      - image: cimg/ruby:3.4.1-browsers
        environment:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: bibdata

    steps:
      - checkout
      - restore_cache:
          keys:
            # this cache is never found because ruby-oci8 isn't included in ci
            - v4-bibdata-{{ checksum "Gemfile.lock" }}
            # use a partial cache restore
            - v4-bibdata-
      - run: gem install bundler -v '~> 2.0'
      - run:
          name: Install dependencies
          command: bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: v4-bibdata-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Lint with Rubocop
          command: bundle exec rubocop

  test:
    working_directory: ~/bibdata

    docker:
      - image: cimg/ruby:3.4.1-browsers
        environment:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: bibdata
          SOLR_URL: http://solr:SolrRocks@localhost:8983/solr/bibdata-core-test
      - image: postgres:13.6-alpine
        environment:
          POSTGRES_USER: bibdata
          POSTGRES_DB: bibdata_test
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: cimg/redis:7.2
      - image: pulibrary/ci-solr:8.4-v2.0.0
        command: server/scripts/ci-start.sh

    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: '18.19.1'
      - restore_cache:
          keys:
            # this cache is never found because ruby-oci8 isn't included in ci
            - v4-bibdata-{{ checksum "Gemfile.lock" }}
            # use a partial cache restore
            - v4-bibdata-
      - run: sudo apt-get -y update
      - run: sudo apt-get install -y postgresql-client || true
      - run: gem install bundler -v '~> 2.0'
      - run:
          name: Install dependencies
          command: bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: v4-bibdata-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Load config into solr
          command: |
            cd solr/conf
            zip -1 -r solr_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://solr:SolrRocks@127.0.0.1:8983/solr/admin/configs?action=UPLOAD&name=bibdata"
            curl -H 'Content-type: application/json' http://solr:SolrRocks@127.0.0.1:8983/api/collections/ -d '{create: {name: bibdata-core-test, config: bibdata, numShards: 1}}'

      - run:
          name: Wait for Postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 120s

      - run:
          name: Database setup
          command: bundle exec rake db:setup

      - run:
          name: Test with RSpec
          command: bundle exec rspec spec
          environment:
            RAILS_ENV: test
            FIGGY_ARK_CACHE_PATH: spec/fixtures/marc_to_solr/figgy_ark_cache
            TRAJECT_CONFIG: marc_to_solr/lib/traject_config.rb
            BIBDATA_ADMIN_NETIDS: admin123
      - store_artifacts:
          path: ~/bibdata/coverage
          destination: coverage

  doc:
    working_directory: ~/bibdata

    docker:
      - image: cimg/ruby:3.4.1-browsers
        environment:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: bibdata
    steps:
      - checkout
      - restore_cache:
          keys:
            # this cache is never found because ruby-oci8 isn't included in ci
            - v4-bibdata-{{ checksum "Gemfile.lock" }}
            # use a partial cache restore
            - v4-bibdata-
      - run: gem install bundler -v '~> 2.0'
      - run:
          name: Install dependencies
          command: bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: v4-bibdata-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Build the YARD documentation
          command: bundle exec yardoc
      - store_artifacts:
          path: ~/bibdata/doc
          destination: doc

  build_and_test_webhook:
    working_directory: ~/bibdata

    # Primary command image where all commands run
    docker:
      - image: cimg/ruby:3.3.6-browsers
    steps:
      - checkout
      - run: gem install bundler -v '~> 2.0'
      - run:
          name: Install dependencies
          working_directory: ~/bibdata/webhook_monitor/src/
          command: bundle install --path=vendor/bundle --jobs 4 --retry 3
      - run:
          name: Rspec
          working_directory: ~/bibdata/webhook_monitor/src/
          command: bundle exec rspec spec

  semgrep:
    docker:
        - image: returntocorp/semgrep
    steps:
      - checkout
      - run:
          name: Check code against community-provided and custom semgrep rules
          command: semgrep ci --config auto --config .semgrep.yml

  bearer:
    docker:
      - image: cimg/ruby:3.4
    environment:
      # Set to default branch of your repo
      DEFAULT_BRANCH: main
    steps:
      - checkout
      - run: curl -sfL https://raw.githubusercontent.com/Bearer/bearer/main/contrib/install.sh | sh -s -- -b /tmp
      - run: CURRENT_BRANCH=$CIRCLE_BRANCH SHA=$CIRCLE_SHA1 /tmp/bearer scan .
  deploy:
    docker:
      - image: cimg/ruby:3.4
    steps:
      - run:
          name: Deploy to Staging
          command: "curl -k \"https://ansible-tower.princeton.edu/api/v2/job_templates/57/launch/\" --header \"Content-Type: application/json\" --header \"Authorization: Bearer $TOWER_TOKEN\" -d '{\"credential_passwords\":{},\"extra_vars\":{\"repo_name\":\"bibdata\"}}'"

workflows:
  version: 2
  default:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build
      - doc:
          requires:
            - build
      - build_and_test_webhook
      - deploy:
         requires:
          - test
         filters:
           branches:
             only:
               - main
      - semgrep
      - bearer
