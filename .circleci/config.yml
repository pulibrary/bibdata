version: 2.1
orbs:
  node: circleci/node@5.0.3
jobs:
  build:
    working_directory: ~/bibdata

    # Primary command image where all commands run
    docker:
      - image: cimg/ruby:3.1-browsers
        environment:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: bibdata
      - image: cimg/postgres:13.6
        environment:
          POSTGRES_USER: bibdata
          POSTGRES_DB: bibdata_test
          POSTGRES_HOST_AUTH_METHOD: trust

    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: '16.19.0'
      - run:
          name: Setup Chrome
          command: |
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo apt install ./google-chrome-stable_current_amd64.deb
      - restore_cache:
          keys:
            # this cache is never found because ruby-oci8 isn't included in ci
            - v4-bibdata-{{ checksum "Gemfile.lock" }}
            # use a partial cache restore
            - v4-bibdata-
      - run: sudo apt-get -y update
      - run: sudo apt-get install -y postgresql-client || true
      - run: gem install bundler -v '~> 2.0'
      - run:
          name: Install dependencies
          command: bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: v4-bibdata-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: create a temp directory
          command: mkdir tmp

      - run:
          command: bundle exec rake server:solr:start_solr_wrapper
          background: true
      - run: bin/jetty_wait

      - run:
          name: Wait for Postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 120s

      - run:
          name: Database setup
          command: bundle exec rake db:setup

  lint:
    working_directory: ~/bibdata

    docker:
      - image: cimg/ruby:3.1-browsers
        environment:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: bibdata

    steps:
      - checkout
      - restore_cache:
          keys:
            # this cache is never found because ruby-oci8 isn't included in ci
            - v4-bibdata-{{ checksum "Gemfile.lock" }}
            # use a partial cache restore
            - v4-bibdata-
      - run: gem install bundler -v '~> 2.0'
      - run:
          name: Install dependencies
          command: bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: v4-bibdata-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Lint with Rubocop
          command: bundle exec rubocop

  test:
    working_directory: ~/bibdata

    docker:
      - image: cimg/ruby:3.1-browsers
        environment:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: bibdata
          SOLR_URL: http://127.0.0.1:8983/solr/bibdata-core-test
      - image: postgres:10.6-alpine
        environment:
          POSTGRES_USER: bibdata
          POSTGRES_DB: bibdata_test
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: redis:4.0.9-alpine

    steps: &test_steps
      - checkout
      - node/install:
          install-yarn: true
          node-version: '16.19.0'
      - run:
          name: Setup Chrome
          command: |
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo apt install ./google-chrome-stable_current_amd64.deb
      - restore_cache:
          keys:
            # this cache is never found because ruby-oci8 isn't included in ci
            - v4-bibdata-{{ checksum "Gemfile.lock" }}
            # use a partial cache restore
            - v4-bibdata-
      - run: sudo apt-get -y update
      - run: sudo apt-get install -y postgresql-client || true
      - run: gem install bundler -v '~> 2.0'
      - run:
          name: Install dependencies
          command: bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: v4-bibdata-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          command: bundle exec rake server:solr:start_solr_wrapper
          background: true
      - run: bin/jetty_wait

      - run:
          name: Wait for Postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 120s

      - run:
          name: Database setup
          command: bundle exec rake db:setup

      - run:
          name: Test with RSpec
          command: bundle exec rspec spec
          environment:
            RAILS_ENV: test
            FIGGY_ARK_CACHE_PATH: spec/fixtures/marc_to_solr/figgy_ark_cache
            TRAJECT_CONFIG: marc_to_solr/lib/traject_config.rb
            BIBDATA_ADMIN_NETIDS: admin123
      - store_artifacts:
          path: ~/bibdata/coverage
          destination: coverage

  doc:
    working_directory: ~/bibdata

    docker:
      - image: cimg/ruby:3.1-browsers
        environment:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: bibdata
    steps:
      - checkout
      - restore_cache:
          keys:
            # this cache is never found because ruby-oci8 isn't included in ci
            - v4-bibdata-{{ checksum "Gemfile.lock" }}
            # use a partial cache restore
            - v4-bibdata-
      - run: gem install bundler -v '~> 2.0'
      - run:
          name: Install dependencies
          command: bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: v4-bibdata-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Build the YARD documentation
          command: bundle exec yardoc
      - store_artifacts:
          path: ~/bibdata/doc
          destination: doc

  build_and_test_webhook:
    working_directory: ~/bibdata

    # Primary command image where all commands run
    docker:
      - image: cimg/ruby:3.1-browsers
    steps:
      - checkout
      - run: gem install bundler -v '~> 2.0'
      - run:
          name: Install dependencies
          working_directory: ~/bibdata/webhook_monitor/src/
          command: bundle install --path=vendor/bundle --jobs 4 --retry 3
      - run:
          name: Rspec
          working_directory: ~/bibdata/webhook_monitor/src/
          command: bundle exec rspec spec

workflows:
  version: 2
  default:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build
      - doc:
          requires:
            - build
      - build_and_test_webhook

