require 'spec_helper'
require_relative '../../lib/bibdata_rs/'

RSpec.describe BibdataRs::UpdateLanguageData do
  it 'generates a rust function based on data from the Library of Congress' do
    loc_data = <<~'END_LOC_DATA'.chomp
      aar||aa|Afar|afar
      abk||ab|Abkhazian|abkhaze
      ace|||Achinese|aceh
      ach|||Acoli|acoli
      gla||gd|Gaelic; Scottish Gaelic|gaélique; gaélique écossais
      qaa-qtz|||Reserved for local use|réservée à l'usage local
    END_LOC_DATA
    file = Tempfile.new
    stub_request(:get, 'https://www.loc.gov/standards/iso639-2/ISO-639-2_utf-8.txt')
      .and_return(body: loc_data)

    described_class.new(file).call

    expected_rust_code = <<~'END_EXPECTED_RUST_CODE'.chomp
      // This file is automatically generated.  Please do not edit it directly,
      // instead run `bundle exec rake languages:iso639_2b:refresh_list`
      use super::Language;
      pub fn from_iso_639b_code(code: &str) -> Option<Language> {
          match code {
              "aar" => Some(Language {
                  english_name: "Afar",
                  two_letter_code: Some("aa"),
              }),
              "abk" => Some(Language {
                  english_name: "Abkhazian",
                  two_letter_code: Some("ab"),
              }),
              "ace" => Some(Language {
                  english_name: "Achinese",
                  two_letter_code: None,
              }),
              "ach" => Some(Language {
                  english_name: "Acoli",
                  two_letter_code: None,
              }),
              "gla" => Some(Language {
                  english_name: "Gaelic",
                  two_letter_code: Some("gd"),
              }),
              _ => None,
          }
      }

    END_EXPECTED_RUST_CODE
    expect(file.read).to eq expected_rust_code
  end
end
